trigger:
  branches:
    include:
    - '*'

pr:
  branches:
    include:
    - '*'

variables:
  MainProject: $(Build.SourcesDirectory)/src/IxMilia.Dxf/IxMilia.Dxf.csproj

stages:
- stage: Build
  jobs:
  - job: Windows
    pool:
      vmImage: windows-2019
    strategy:
      maxParallel: 2
      matrix:
        debug:
          _configuration: Debug
        release:
          _configuration: Release
    steps:
    - checkout: self
      clean: true
    - script: build-and-test.cmd -c $(_configuration)
      displayName: Build / Test
    - script: 'dotnet pack --no-restore --no-build -c $(_configuration) -o "$(Build.ArtifactStagingDirectory)" "$(MainProject)"'
      displayName: Pack
    - task: PublishBuildArtifacts@1
      displayName: Publish Package
      condition: and(succeeded(), eq(variables['_configuration'], 'Release'))
      inputs:
        pathtoPublish: $(Build.ArtifactStagingDirectory)
        artifactName: packages
  - job: Linux
    pool:
      vmImage: ubuntu-16.04
    strategy:
      maxParallel: 2
      matrix:
        debug:
          _configuration: Debug
        release:
          _configuration: Release
    steps:
    - checkout: self
      clean: true
    - script: ./build-and-test.sh -c $(_configuration)
      displayName: Build / Test
    - script: 'dotnet pack --no-restore --no-build -c $(_configuration) -o "$(Build.ArtifactStagingDirectory)" "$(MainProject)"'
      displayName: Pack
# only publish on non-public builds of tags
- ${{ if and(ne(variables['System.TeamProject'], 'public'), startsWith(variables['Build.SourceBranch'], 'refs/tags/')) }}:
  - stage: Publish
    dependsOn: Build
    jobs:
    - job: Publish
      pool:
        vmImage: windows-2019
      steps:
      - checkout: none
      - task: DownloadBuildArtifacts@0
        displayName: Download artifacts
        inputs:
          artifactName: packages
          downloadPath: $(System.DefaultWorkingDirectory)
      - task: NuGetCommand@2
        displayName: Publish
        inputs:
          command: push
          packagesToPush: '$(System.DefaultWorkingDirectory)\packages\*.nupkg'
          nuGetFeedType: external
          publishFeedCredentials: 'NuGet - IxMilia'

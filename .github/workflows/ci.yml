name: CI

on: [push, pull_request]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        configuration: [Debug, Release]
        oldsdk: [true, false]
    steps:
    - uses: actions/checkout@v1
    - name: install dotnet 2.1 sdk
      uses: actions/setup-dotnet@v1
      if: matrix.oldsdk == true
      with:
        dotnet-version: '2.1.513'
    - name: install dotnet 3.1 sdk
      uses: actions/setup-dotnet@v1
      if: matrix.oldsdk != true
      with:
        dotnet-version: '3.1.100'
    - name: Build and test
      shell: pwsh
      run: |
        $shellExt = if ($IsWindows) { "cmd" } else { "sh" }
        & ./build-and-test.$shellExt --configuration ${{ matrix.configuration }}
      env:
        BuildWithOldSdk: ${{ matrix.oldsdk }}

  nuget-publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.100'
    - run: .\build-and-test.cmd -c Release -notest
    - run: .\src\create-package.cmd
    - run: dotnet nuget push .\artifacts\packages\Release\IxMilia.Dxf.*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
